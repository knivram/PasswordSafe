// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id
  email             String        @unique
  salt              String
  publicKey         String
  wrappedPrivateKey String
  vaultAccess       VaultAccess[]
}

model Vault {
  id          String        @id @default(uuid()) @db.Uuid
  name        String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  secrets     Secret[]
  vaultAccess VaultAccess[]
}

model Secret {
  id            String   @id @default(uuid()) @db.Uuid
  vaultId       String   @db.Uuid
  title         String
  encryptedData String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  vault         Vault    @relation(fields: [vaultId], references: [id], onDelete: Cascade)

  @@index([vaultId])
}

enum AccessRole {
  OWNER
  EDITOR
  VIEWER
}

model VaultAccess {
  id         String     @id @default(uuid()) @db.Uuid
  vaultId    String     @db.Uuid
  userId     String
  role       AccessRole
  wrappedKey String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  vault      Vault      @relation(fields: [vaultId], references: [id], onDelete: Cascade)
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([vaultId, userId])
  @@index([userId])
  @@index([vaultId])
}
